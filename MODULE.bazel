module(
    name = "com_jordansimsmith",
)

bazel_dep(name = "rules_java", version = "7.7.0")
bazel_dep(name = "rules_jvm_external", version = "6.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "dagger",
    sha256 = "4062fa2cda8dab32d1961fb10ed50f40aca759149efb64dd5a08077a6fcb2fbc",
    strip_prefix = "dagger-dagger-2.52",
    url = "https://github.com/google/dagger/archive/dagger-2.52.zip",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "org.junit.platform:junit-platform-launcher:1.10.3",
        "org.junit.platform:junit-platform-reporting:1.10.3",
        "org.junit.jupiter:junit-jupiter-api:5.10.3",
        "org.junit.jupiter:junit-jupiter-params:5.10.3",
        "org.junit.jupiter:junit-jupiter-engine:5.10.3",
        "org.testcontainers:testcontainers:1.19.8",
        "org.testcontainers:junit-jupiter:1.19.8",
        "org.slf4j:slf4j-api:2.0.13",
        "ch.qos.logback:logback-core:1.5.6",
        "ch.qos.logback:logback-classic:1.5.6",
        "org.assertj:assertj-core:3.26.3",
        "software.amazon.awssdk:bom:2.29.0",
        "software.amazon.awssdk:dynamodb:2.29.0",
        "software.amazon.awssdk:dynamodb-enhanced:2.29.0",
        "software.amazon.awssdk:iam-policy-builder:2.29.0",
        "software.amazon.awssdk:secretsmanager:2.29.0",
        "software.amazon.awssdk:sns:2.29.0",
        "com.amazonaws:aws-lambda-java-core:1.2.3",
        "com.amazonaws:aws-lambda-java-events:3.13.0",
        "com.google.guava:guava:33.2.1-jre",
        "com.google.dagger:dagger:2.52",
        "com.google.dagger:dagger-compiler:2.52",
        "com.google.dagger:dagger-producers:2.52",
        "com.fasterxml.jackson.core:jackson-annotations:2.17.2",
        "com.fasterxml.jackson.core:jackson-core:2.17.2",
        "com.fasterxml.jackson.core:jackson-databind:2.17.2",
        "org.jsoup:jsoup:1.18.1",
    ],
)
use_repo(maven, "maven")

bazel_dep(name = "contrib_rules_jvm", version = "0.27.0")
bazel_dep(name = "rules_oci", version = "2.0.0-beta1")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "dynamodb",
    image = "docker.io/amazon/dynamodb-local",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
    tag = "2.5.2",
)
oci.pull(
    name = "alpine",
    image = "docker.io/library/alpine",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
    tag = "3.17",
)
oci.pull(
    name = "ryuk",
    image = "docker.io/testcontainers/ryuk",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
    tag = "0.7.0",
)
oci.pull(
    name = "localstack",
    image = "docker.io/localstack/localstack",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
    tag = "3.8.0",
)
use_repo(oci, "alpine", "alpine_linux_amd64", "alpine_linux_arm64_v8", "dynamodb", "dynamodb_linux_amd64", "dynamodb_linux_arm64", "localstack", "localstack_linux_amd64", "localstack_linux_arm64", "ryuk", "ryuk_linux_amd64", "ryuk_linux_arm64")

bazel_dep(name = "aspect_rules_lint", version = "1.0.0-rc8")

http_jar = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_jar")

http_jar(
    name = "google_java_format",
    sha256 = "33068bbbdce1099982ec1171f5e202898eb35f2919cf486141e439fc6e3a4203",
    url = "https://github.com/google/google-java-format/releases/download/v1.17.0/google-java-format-1.17.0-all-deps.jar",
)

bazel_dep(
    name = "buildifier_prebuilt",
    version = "6.4.0",
    dev_dependency = True,
)

bazel_dep(name = "rules_python", version = "0.37.1")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.11",
    requirements_lock = "//:requirements.txt",
)
use_repo(pip, "pypi")

bazel_dep(name = "aspect_rules_js", version = "2.1.0")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
use_repo(pnpm, "pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "npm",
    data = [
        "//personal_website_web:package.json",
    ],
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
)
use_repo(npm, "npm")
